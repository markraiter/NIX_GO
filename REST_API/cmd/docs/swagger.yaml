basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Comment:
    properties:
      body:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      postId:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Post:
    properties:
      body:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Example REST_API for demonstrating Swagger with Echo framework.
  title: Echo Swagger Example REST_API
  version: 1.0.0.
paths:
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment from the database by ID.
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Comment deleted successfully
        "404":
          description: Comment not found
          schema:
            type: string
        "500":
          description: Error deleting comment
          schema:
            type: string
      summary: Delete a comment by ID
    put:
      consumes:
      - application/json
      description: Update a comment in the database by ID.
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Invalid comment data
          schema:
            type: string
        "404":
          description: Comment not found
          schema:
            type: string
        "500":
          description: Error updating comment
          schema:
            type: string
      summary: Update a comment by ID
  /posts:
    get:
      consumes:
      - application/json
      description: Get all posts from the database.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "500":
          description: Error fetching post
          schema:
            type: string
      summary: Get all posts
    post:
      consumes:
      - application/json
      description: Create a new post with the specified data.
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Invalid post data
          schema:
            type: string
        "500":
          description: Error creating post
          schema:
            type: string
      summary: Create a new post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post from the database by ID.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Post deleted successfully
        "404":
          description: Post not found
          schema:
            type: string
        "500":
          description: Error deleting post
          schema:
            type: string
      summary: Delete a post by ID
    get:
      consumes:
      - application/json
      description: Get a post from the database by ID.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "404":
          description: Post not found
          schema:
            type: string
      summary: Get a post by ID
    put:
      consumes:
      - application/json
      description: Update a post in the database by ID.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Invalid post data
          schema:
            type: string
        "404":
          description: Post not found
          schema:
            type: string
        "500":
          description: Error updating post
          schema:
            type: string
      summary: Update a post by ID
  /posts/{post_id}/comments:
    post:
      consumes:
      - application/json
      description: Create a new comment for a post with the specified data.
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: integer
      - description: Comment data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Invalid comment data
          schema:
            type: string
        "404":
          description: Post not found
          schema:
            type: string
        "500":
          description: Error creating comment
          schema:
            type: string
      summary: Create a new comment for a post
swagger: "2.0"
